# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: ["master", "dev"]
  pull_request:
    branches: ["master", "dev"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 30 # Prevent infinite hangs

    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libmagic1
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install dependencies
        run: |
          uv sync
          uv pip install pyinstaller pytest-cov pytest-timeout
      - name: Test with pytest and generate coverage
        run: |
          uv run pytest tests/ --cov=src/indu_doc --cov-report=xml --cov-report=html -v --timeout=300 --tb=short
      - name: Upload coverage reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage.xml
            htmlcov/
      - name: Coverage Summary
        run: |
          echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Coverage reports have been generated and uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Download the 'coverage-reports' artifact to view detailed HTML coverage report." >> $GITHUB_STEP_SUMMARY
      - name: Build executable with PyInstaller
        run: |
          uv run pyinstaller --onefile --console --collect-all click --name indu_doc src/indu_doc/cli.py
      - name: Upload executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: indu_doc-executable
          path: dist/indu_doc
